System.register(['angular2/core', 'angular2/common', '../../models', '../../services/checkout/checkout.service', 'angular2/router', '../../route.config'], function(exports_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, common_1, models_1, checkout_service_1, router_1, route_config_1;
    var CheckoutComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (common_1_1) {
                common_1 = common_1_1;
            },
            function (models_1_1) {
                models_1 = models_1_1;
            },
            function (checkout_service_1_1) {
                checkout_service_1 = checkout_service_1_1;
            },
            function (router_1_1) {
                router_1 = router_1_1;
            },
            function (route_config_1_1) {
                route_config_1 = route_config_1_1;
            }],
        execute: function() {
            CheckoutComponent = (function () {
                function CheckoutComponent(_checkoutService, _routeParams, _router) {
                    this._checkoutService = _checkoutService;
                    this._routeParams = _routeParams;
                    this._router = _router;
                    this.states = ['NSW', 'VIC', 'TAS', 'WA', 'SA', 'NT', 'QLD'];
                    this.submitted = false;
                    this.model = new models_1.Order();
                }
                CheckoutComponent.prototype.onSubmit = function () {
                    var _this = this;
                    console.log(JSON.stringify(this.model));
                    this._checkoutService.postOrder(this.model).
                        subscribe(function (order) {
                        toastr.success("successfully added order");
                        _this._router.navigate([("/" + route_config_1.Routes.orders.as)]);
                    });
                    this.submitted = true;
                };
                CheckoutComponent = __decorate([
                    core_1.Component({
                        selector: 'checkout',
                        template: "\n                          <div class=\"album-section\">\n                            <div class=\"container\">\n                                <div class=\"card\">\n                                    <div class=\"card-block\">\n                                        <div [hidden]=\"submitted\">\n                                            <h1>Shopping Cart Form</h1>\n                                            <form (ng-submit)=\"onSubmit()\" #cart=\"ngForm\" novalidate>\n                                                <div class=\"form-group\">\n                                                    <label for=\"firstname\">First Name</label>\n                                                    <input type=\"text\" class=\"form-control\" required\n                                                           [(ngModel)]=\"model.firstName\"\n                                                           ngControl=\"firstname\" #firstname=\"ngForm\">\n                                                    <div [hidden]=\"(firstname.touched && firstname.valid) || firstname.untouched\" class=\"alert alert-danger\">\n                                                        First Name is required\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"lastname\">Last Name</label>\n                                                    <input type=\"text\" class=\"form-control\" required\n                                                           [(ngModel)]=\"model.lastName\"\n                                                           ngControl=\"lastName\" #lastname=\"ngForm\">\n                                                    <div [hidden]=\"(lastname.touched && lastname.valid) || lastname.untouched\" class=\"alert alert-danger\">\n                                                        Last Name is required\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"email\">Email</label>\n                                                    <input type=\"email\" class=\"form-control\" required\n                                                           [(ngModel)]=\"model.email\"\n                                                           ngControl=\"email\" #email=\"ngForm\">\n                                                    <div [hidden]=\"(email.touched && email.valid) || email.untouched\" class=\"alert alert-danger\">\n                                                        Email is required\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"phone\">Phone</label>\n                                                    <input type=\"text\" class=\"form-control\" required\n                                                           [(ngModel)]=\"model.phone\"\n                                                           ngControl=\"phone\" #phone=\"ngForm\">\n                                                    <div [hidden]=\"(phone.touched && phone.valid) || phone.untouched\" class=\"alert alert-danger\">\n                                                        Phone is required\n                                                    </div>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"address\">Address</label>\n                                                    <input type=\"text\" class=\"form-control\" required\n                                                           [(ngModel)]=\"model.address\"\n                                                           ngControl=\"address\" #address=\"ngForm\">\n                                                    <div [hidden]=\"(address.touched && address.valid) || address.untouched\" class=\"alert alert-danger\">\n                                                        Address is required\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-6\">\n                                                        <div class=\"form-group\">\n                                                            <label for=\"city\">City</label>\n                                                            <input type=\"text\" class=\"form-control\" required\n                                                                   [(ngModel)]=\"model.city\"\n                                                                   ngControl=\"city\" #city=\"ngForm\">\n                                                            <div [hidden]=\"(city.touched && city.valid) || city.untouched\" class=\"alert alert-danger\">\n                                                                City is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-6\">\n                                                        <div class=\"form-group\">\n                                                            <label for=\"postalcode\">Post Code</label>\n                                                            <input type=\"text\" class=\"form-control\" required\n                                                                   [(ngModel)]=\"model.postalCode\"\n                                                                   ngControl=\"postalcode\" #postalcode=\"ngForm\">\n                                                            <div [hidden]=\"(postalcode.touched && postalcode.valid) || postalcode.untouched\" class=\"alert alert-danger\">\n                                                                Post code is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-6\">\n                                                        <div class=\"form-group\">\n                                                            <label for=\"state\">State</label>\n                                                            <select class=\"form-control\" required\n                                                                    [(ngModel)]=\"model.state\"\n                                                                    ngControl=\"states\" #state=\"ngForm\">\n                                                                <option *ngFor=\"#s of states\" [value]=\"s\">{{s}}</option>\n                                                            </select>\n                                                            <div [hidden]=\"(state.touched && state.valid) || state.untouched\" class=\"alert alert-danger\">\n                                                                State is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-6\">\n                                                        <div class=\"form-group\">\n                                                            <label for=\"country\">Country</label>\n                                                            <input type=\"text\" class=\"form-control\" required\n                                                                   [(ngModel)]=\"model.country\"\n                                                                   ngControl=\"country\" #country=\"ngForm\">\n                                                            <div [hidden]=\"(country.touched && country.valid) || country.untouched\" class=\"alert alert-danger\">\n                                                                Country is required\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button type=\"submit\" class=\"btn btn-default\"\n                                                        [disabled]=\"!cart.form.valid\">\n                                                    Submit\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                          </div>\n                        ",
                        styles: ["\n                          .ng-valid[required] {\n                            border-left: 5px solid #42A948;\n                          }\n                          .ng-valid[required]:focus {\n                              border-color: rgba(66,169, 72, 0.7 );\n                              box-shadow: 0 1px 1px rgba(66,169, 72, 0.7 ) inset, 0 0 8px rgba(66,169, 72, 0.7 );\n                              outline: 0 none;\n                          }\n\n                          .ng-invalid {\n                            border-left: 5px solid #a94442;\n                          }\n\n                          .card {\n                            background-color: #fff;\n                          }\n                        "],
                        directives: [common_1.CORE_DIRECTIVES, common_1.FORM_DIRECTIVES, common_1.NgForm, common_1.NgFormControl]
                    }), 
                    __metadata('design:paramtypes', [checkout_service_1.CheckoutService, router_1.RouteParams, router_1.Router])
                ], CheckoutComponent);
                return CheckoutComponent;
            })();
            exports_1("CheckoutComponent", CheckoutComponent);
        }
    }
});
